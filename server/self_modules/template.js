/** 模板功能*/const template = (app,connection) =>{  var frontRequestUrl = "/produceMS";  // 获取所有模板列表  app.get([frontRequestUrl+'/listAllTemplate'],function(req,res){      var name = req.query.keyword?req.query.keyword:'';      var parse = req.query;      // var sqlQuest = 'select *, `procedure` from template where name like "%'+name+'%"';      // var sqlQuest = 'select *, `procedure` from template left join user ';      // 将template中duty里userID组合成的字符转为用户姓名      var sqlQuest = "select template.id,template.name, template.procedure,replace(GROUP_CONCAT(userName),',',' ') as duty  from template,user where duty like CONCAT('%',userID,'%') and  ifDelete = ? GROUP BY template.id";      connection.query(sqlQuest,[parse.ifDelete||0], function(error,res1,fileds){          if(error){              console.log(error);              res.send(JSON.stringify({code:500,msg:'查询模板数据失败',results:res1}));          }else{              if(res1.length){                  res.send(JSON.stringify({code:200,msg:'查询模板数据成功',results:res1}));              }else{                  res.send(JSON.stringify({code:500,msg:'暂无模板信息',results:res1}));              }          }      })  })  // 更新模板信息  app.post(frontRequestUrl+'/updateTemplate',function(req,res){      var parse = req.body;      var sqlQuest = "update template set name=?,`procedure`=?,duty=? where id = ?";      // 需要mysql语句处理的字段，可以不必拼接，直接放入下面的自动拼接语句里      var sqlParam = [parse.name, parse.procedure, parse.duty, parse.id];      connection.query(sqlQuest,sqlParam,function(error,res1){          if(error){              console.log(error);              res.send(JSON.stringify({code:500,'msg':'更新模板信息失败'}));          }else{              res.send(JSON.stringify({code:200,'msg':'更新模板信息成功'}));          }      })  })  // 新增模板  app.post(frontRequestUrl+'/addTemplate',function(req,res){      var parse = req.body;      var sqlQuest0 = "select * from template where name = '"+parse.name+"'";      connection.query(sqlQuest0,function(error,res0){        if(error){          console.log(error);return;        }        if(res0.length!=0){           res.send(JSON.stringify({code:500,'msg':'该模板名称已存在，请重新设置'}));        }else{          // 新增模板          var sqlQuest = "insert into template(name, `procedure`, duty) values(?, ?, ?)";          var sqlParam = [parse.name, parse.procedure, parse.duty];          connection.query(sqlQuest,sqlParam,function(error,res1){              if(error){                  console.log(error);                  res.send(JSON.stringify({code:500,'msg':'新增模板失败'}));              }else{                  //如果订单创建完成，应创建对应的流程表                  connection.query("select * from template where id = ?",[res1.insertId],function(error,res2){                      if(error){                          console.log(error);                          res.send(JSON.stringify({code:500,'msg':'新增模板失败'}));                      }else{                          res.send(JSON.stringify({code:200,'msg':'新增模板成功', results: res2[0]}));                      }                  })              }          })        }      })  })  // 删除模板(字段区分，不删除记录)  app.post(frontRequestUrl+'/deleteTemplate',function(req,res){      var parse = req.body;      // var sqlQuest = "delete from template where id = '"+parse.id+"'";      var sqlQuest = "update template set ifDelete = 1 where id = '"+parse.id+"'";      connection.query(sqlQuest,function(error,res1){          if(error){              console.log(error);              res.send(JSON.stringify({code:500,'msg':'删除模板失败'}));          }else{              res.send(JSON.stringify({code:200,'msg':'删除模板成功'}));          }      })  })  // 还原模板  app.post(frontRequestUrl+'/recycleTemplate',function(req,res){      var parse = req.body;      // var sqlQuest = "delete from template where id = '"+parse.id+"'";      var sqlQuest = "update template set ifDelete = 0 where id = '"+parse.id+"'";      connection.query(sqlQuest,function(error,res1){          if(error){              console.log(error);              res.send(JSON.stringify({code:500,'msg':'还原模板失败'}));          }else{              res.send(JSON.stringify({code:200,'msg':'还原模板成功'}));          }      })  })}module.exports = template;