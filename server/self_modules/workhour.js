/** 工时功能*/const workhour = (app,connection, moment) =>{  var frontRequestUrl = "/produceMS";  // 权数管理  // 获取所有权数列表  app.get([frontRequestUrl+'/listAllFactor', frontRequestUrl+'/listSystemUserByName'],function(req,res){      var startTime = req.query.startTime?req.query.startTime:'';      var endTime = req.query.endTime?req.query.endTime:'';      // var sqlQuest = 'select * from factor where userName like "%'+userName+'%"';      // var sqlQuest = 'select * from factor order by year,month  asc ';      var sqlQuest = 'select distinct year,month,factor from factor order by year,month  asc';      connection.lastest().query(sqlQuest,function(error,res1,fileds){          if(error){              console.log(error);              res.send(JSON.stringify({code:500,msg:'查询订单数据失败',results:res1}));          }else{              if(res1.length){                  res.send(JSON.stringify({code:200,msg:'查询订单数据成功',results:res1}));              }else{                  res.send(JSON.stringify({code:500,msg:'无该订单信息',results:res1}));              }          }      })  })  // 更新权数信息  app.post(frontRequestUrl+'/updateFactor',function(req,res){      var parse = req.body;      var sqlQuest = "update factor set factor=? where id = ?";      // 需要mysql语句处理的字段，可以不必拼接，直接放入下面的自动拼接语句里      var sqlParam = [parse.factor, parse.id];      // console.log(sqlQuest,sqlParam);      connection.lastest().query(sqlQuest,sqlParam,function(error,res1){          if(error){              console.log(error);              res.send(JSON.stringify({code:500,'msg':'更新权数失败'}));          }else{              res.send(JSON.stringify({code:200,'msg':'更新权数成功'}));          }      })  })  // 工作日历  // 列出所有数据  app.get(frontRequestUrl+'/queryWorkCalendar',function(req,res){      // var sqlQuest = 'select * from factor where userName like "%'+userName+'%"';      var sqlQuest = 'select * from workCalendar order by date';      connection.lastest().query(sqlQuest,function(error,res1,fileds){          if(error){              console.log(error);              res.send(JSON.stringify({code:500,msg:'查询工作日历失败',results:res1}));          }else{              if(res1.length){                  res.send(JSON.stringify({code:200,msg:'查询工作日历数据成功',results:res1}));              }else{                  res.send(JSON.stringify({code:500,msg:'暂无工作日历数据',results:res1}));              }          }      })  })  // 更新工作日历  app.post(frontRequestUrl+'/updateWorkCalendar',function(req,res){      var parse = req.body;      // console.log(parse);      var dataCon = [];      for(let i in  parse.workDate){        dataCon.push(["'"+i+"'", parse.workDate[i]]);      }      var sqlQuest0 = "start transaction;delete from workCalendar where id>=(select id from (select * from workCalendar where date="+dataCon[0][0]+") a order by id asc limit 1)";      // console.log("dataCon====", dataCon);      connection.lastest().query(sqlQuest0,function(error,res1){          if(error){              console.log(error);connection.lastest().query('rollback;commit');              // res.send(JSON.stringify({code:500,'msg':'更新权数失败'}));          }else{              // res.send(JSON.stringify({code:200,'msg':'更新权数成功'}));              var sqlParam = '('+[dataCon.join('),(')]+')';              var sqlQuest = "insert into workCalendar(date, hour) values "+sqlParam;              // console.log(sqlQuest);              connection.lastest().query(sqlQuest,function(error,res1){                  if(error){                      console.log(error);                      connection.lastest().query('rollback;commit');                      res.send(JSON.stringify({code:500,'msg':'更新工作日历失败'}));                  }else{                      connection.lastest().query('commit');                      res.send(JSON.stringify({code:200,'msg':'更新工作日历成功'}));                  }              })          }      })      /*var sqlParam = '('+[dataCon.join('),(')]+')';      var sqlQuest = "start transaction;insert into workCalendar(date, hour) values"+sqlParam;      connection.lastest().query(sqlQuest,function(error,res1){            if(error){                console.log(error);                connection.lastest().query('rollback;commit');                res.send(JSON.stringify({code:500,'msg':'更新工作日历失败'}));            }else{                connection.lastest().query('commit');                res.send(JSON.stringify({code:200,'msg':'更新工作日历成功'}));            }        })*/  })  // 根据订单与流程详情查询工时  function countWorkTime(req, res){    var startTime = req.query.startTime?req.query.startTime:'';    var endTime = req.query.endTime?req.query.endTime:'';    var sqlQuest = '';    var sqlParam = '';    // var sqlQuest1 = 'select GROUP_CONCAT(worker),pid,count(*) from procedureDetail GROUP BY pid';//查询订单总共参与的人数    // var sqlQuest1 = 'select max(workercount),pid from procedureDetail GROUP BY  pid';    var sqlQuest1 = 'select * from indent INNER JOIN (select `procedure`.indentid,a.workercount from `procedure` INNER JOIN (select max(workercount) as workercount,min(workercount) as min,pid from procedureDetail GROUP BY  pid) a on a.pid = `procedure`.id) b on indent.id = b.indentid where indent.`status` = 1';    connection.lastest().query(sqlQuest1, sqlParam, function(error,res1,fileds){        if(error){            console.log(error);            res.send(JSON.stringify({code:500,msg:'查询工时数据失败',results:res1}));        }else{            if(res1.length){                res.send(JSON.stringify({code:200,msg:'查询工时数据成功',results:res1}));            }else{                res.send(JSON.stringify({code:500,msg:'暂无工时信息',results:res1}));            }        }    })  }  // 获取订单工时列表(根据时间段查询)  app.get([frontRequestUrl+'/queryWorkHourByDate', frontRequestUrl+'/listSystemUserByName'],function(req,res){      var startTime = req.query.startTime?req.query.startTime:'';      var endTime = req.query.endTime?req.query.endTime:'';      var sqlQuest = '';      var sqlParam = '';      if(startTime){        // sqlQuest = 'select * from workhour where startTime = ?, endTime = ?';        sqlQuest = "select  workhour.*,indent.planNum, indent.materialName, indent.actualStart,indent.actualFinish, factor.factor as factor from workhour left join indent on workhour.indentID = indent.id inner join factor on workhour.factor = factor.id where actualStart>? and actualFinish<? and indent.ifdelete!=1";        sqlParam = [startTime, endTime];      }else{        // sqlQuest = 'select workhour.*,indent.*,factor.factor as factor from workhour inner join indent on workhour.indentID = indent.id inner join factor on workhour.factor = factor.id';        sqlQuest = "select  workhour.*,indent.planNum, indent.materialName, indent.actualStart,indent.actualFinish, factor.factor as factor from workhour left join indent on workhour.indentID = indent.id inner join factor on workhour.factor = factor.id where indent.ifdelete!=1";      }      connection.lastest().query(sqlQuest, sqlParam, function(error,res1,fileds){          if(error){              console.log(error);              res.send(JSON.stringify({code:500,msg:'查询订单数据失败',results:res1}));          }else{              if(res1.length){                  res.send(JSON.stringify({code:200,msg:'查询订单数据成功',results:res1}));              }else{                  res.send(JSON.stringify({code:500,msg:'暂无订单信息',results:res1}));              }          }      })      // countWorkTime(req, res);  })  // 查看流程工时  app.get([frontRequestUrl+'/queryProcedureWorkHourByDate'],function(req,res){      var startTime = req.query.startTime?req.query.startTime:'';      var endTime = req.query.endTime?req.query.endTime:'';      var sqlQuest = '';      var sqlParam = '';      /*if(startTime){        sqlQuest = 'select * from workhour where startTime = ?, endTime = ?';        sqlParam = [startTime, endTime];      }else{        // sqlQuest = 'select workhour.*,indent.*,factor.factor as factor from workhour inner join indent on workhour.indentID = indent.id inner join factor on workhour.factor = factor.id';        sqlQuest = "select factor.factor as factor, workhour.*,indent.planNum from workhour inner join indent on workhour.indentID = indent.id inner join factor on workhour.factor = factor.id";      }*/      if(req.query.indentID){        sqlQuest =  "select a.*,user.userName as duty, i.erp,i.planNum,i.factor from `procedure` a inner join (select b.id,workhour.indentID, b.planNum,b.erp,factor.factor from indent b left join workhour on b.id = workhour.indentID left join factor on workhour.factor = factor.id) i on a.indentID = i.indentID left join user on a.duty = user.userID where indentID=? order by indentID";      }else{          sqlQuest =  "select a.*,user.userName as duty, i.erp,i.planNum,i.factor from `procedure` a inner join (select b.id,b.status,b.ifDelete,workhour.indentID, b.planNum,b.erp,factor.factor from indent b left join workhour on b.id = workhour.indentID left join factor on workhour.factor = factor.id where  b.ifDelete != 1) i on a.indentID = i.id left join user on a.duty = user.userID where a.status = 2 order by indentID";      }      sqlParam = [req.query.indentID];      //console.log(sqlQuest, sqlParam);      connection.lastest().query(sqlQuest, sqlParam, function(error,res1,fileds){          if(error){              console.log(error);              res.send(JSON.stringify({code:500,msg:'查询流程数据失败',results:res1}));          }else{              if(res1.length){                  res.send(JSON.stringify({code:200,msg:'查询流程数据成功',results:res1}));              }else{                  res.send(JSON.stringify({code:500,msg:'暂无流程信息',results:res1}));              }          }      })      // countWorkTime(req, res);  })  // 查看员工工时  app.get([frontRequestUrl+'/queryWorkHourForUser'],function(req,res){      var startDate = req.query.startDate?req.query.startDate:'';      var endDate = req.query.endDate?req.query.endDate:'';      startDate = moment(new Date(startDate)).format('YYYY-MM-DD 00:00:00');      endDate = moment(new Date(endDate)).format('YYYY-MM-DD 23:59:59');      // console.log(startDate, endDate);      // var sqlQuest = "select DISTINCT a.userID, a.userName, b.*, sum(hourcount) as hourcount from `user` a left join `procedureDetail` b on b.worker like CONCAT('%',a.userName,'%') GROUP BY userID";      var sqlQuest = "select DISTINCT a.userID, a.userName, b.*, sum(hourcount/workercount) as hourcount from `user` a left join `procedureDetail` b on FIND_IN_SET(a.userName, REPLACE(b.worker,' ',',')) where finishTime >= ? and finishTime <=? GROUP BY userID order by hourcount desc";      connection.lastest().query(sqlQuest, [startDate, endDate], function(error,res1,fileds){          if(error){              console.log(error);              res.send(JSON.stringify({code:500,msg:'查询员工工时数据失败',results:res1}));          }else{              if(res1.length){                  res.send(JSON.stringify({code:200,msg:'查询员工工时数据成功',results:res1}));              }else{                  res.send(JSON.stringify({code:500,msg:'暂无员工工时信息',results:res1}));              }          }      })      // countWorkTime(req, res);  })  // 查看员工对应的项目  app.get([frontRequestUrl+'/queryUserProgram'],function(req,res){      var userID = req.query.userID;      var userName = req.query.userName;      // var sqlQuest = "select erp,b.name,indentID,moreinfoid,materialName from indent a right join (select name,indentID,moreinfoid from `procedure` RIGHT JOIN (select pid as moreinfoid from `procedureDetail` where CONCAT('/',REPLACE(worker,' ','/')) like '%/"+userName+"' group by moreinfoid) c on `procedure`.id=c.moreinfoid) b on a.id = b.indentID order by indentID";      var sqlQuest = "select erp,b.name,indentID,moreinfoid,materialName from indent a right join (select name,indentID,moreinfoid from `procedure` RIGHT JOIN (select pid as moreinfoid from `procedureDetail` where find_in_set('"+userName+"',REPLACE(worker,' ',',')) group by moreinfoid) c on `procedure`.id=c.moreinfoid) b on a.id = b.indentID order by indentID";      connection.lastest().query(sqlQuest, function(error,res1,fileds){          if(error){            console.log(error);              res.send(JSON.stringify({code:500,msg:'查询员工参与项目数据失败',results:res1}));          }else{              if(res1.length){                  res.send(JSON.stringify({code:200,msg:'查询员工参与项目数据成功',results:res1}));              }else{                  res.send(JSON.stringify({code:500,msg:'暂无员工参与项目信息',results:res1}));              }          }      })      // countWorkTime(req, res);  })  // 查看设备工时  app.get([frontRequestUrl+'/queryWorkHourForEquipment'],function(req,res){      var startDate = req.query.startDate?req.query.startDate:'';      var endDate = req.query.endDate?req.query.endDate:'';      startDate = moment(new Date(startDate)).format('YYYY-MM-DD 00:00:00');      endDate = moment(new Date(endDate)).format('YYYY-MM-DD 23:59:59');      // console.log(startDate, endDate);      // var sqlQuest = "select DISTINCT a.userID, a.userName, b.*, sum(hourcount) as hourcount from `user` a left join `procedureDetail` b on b.worker like CONCAT('%',a.userName,'%') GROUP BY userID";      var sqlQuest = "select DISTINCT a.id, a.name, b.*, sum(hourcount/workercount) as hourcount from `equipment` a left join `procedureDetail` b on FIND_IN_SET(a.name, REPLACE(b.worker,' ',',')) where finishTime >= ? and finishTime <=? GROUP BY a.id order by hourcount desc";      connection.lastest().query(sqlQuest, [startDate, endDate], function(error,res1,fileds){          if(error){              console.log(error);              res.send(JSON.stringify({code:500,msg:'查询设备工时数据失败',results:res1}));          }else{              if(res1.length){                  res.send(JSON.stringify({code:200,msg:'查询设备工时数据成功',results:res1}));              }else{                  res.send(JSON.stringify({code:500,msg:'暂无设备工时信息',results:res1}));              }          }      })      // countWorkTime(req, res);  })  // 查看设备对应的项目  app.get([frontRequestUrl+'/queryEquipmentProgram'],function(req,res){      var userID = req.query.userID;      var userName = req.query.userName;      var sqlQuest = "select erp,b.name,indentID,moreinfoid,materialName from indent a right join (select name,indentID,moreinfoid from `procedure` RIGHT JOIN (select pid as moreinfoid from `procedureDetail` where find_in_set('"+userName+"',REPLACE(worker,' ',',')) group by moreinfoid) c on `procedure`.id=c.moreinfoid) b on a.id = b.indentID order by indentID";      connection.lastest().query(sqlQuest, function(error,res1,fileds){          if(error){            console.log(error);              res.send(JSON.stringify({code:500,msg:'查询设备参与项目数据失败',results:res1}));          }else{              if(res1.length){                  res.send(JSON.stringify({code:200,msg:'查询设备参与项目数据成功',results:res1}));              }else{                  res.send(JSON.stringify({code:500,msg:'暂无设备参与项目信息',results:res1}));              }          }      })      // countWorkTime(req, res);  })}module.exports = workhour;