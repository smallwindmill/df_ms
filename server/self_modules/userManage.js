/** 用户管理功能*/const userManage = (app,connection) =>{  var frontRequestUrl = "/produceMS";  // 用户消息获取与已读标记  app.get([frontRequestUrl+'/queryMessage'],function(req,res){    var userID = req.query.userID?req.query.userID:'';    var sqlQuest = 'select * from message where userID = ? and status = 0;select userName from user where userID = ?;';    connection.query(sqlQuest, [userID, userID], function(error,res1,fileds){        if(error){            res.send(JSON.stringify({code:500,msg:'获取用户消息失败',results:[]}));        }else{            var resp_in = {userName: res1[1][0].userName, message: res1[0]};            if(res1.length){                res.send(JSON.stringify({code:200,msg:'获取用户消息成功',results:resp_in}));            }else{                res.send(JSON.stringify({code:500,msg:'暂无消息',results:[]}));            }        }    })  })  app.post([frontRequestUrl+'/markMessageRead'],function(req,res){    var id = req.body.id?req.body.id:'';    var sqlQuest = 'update message set status = 1 where id = ?';    connection.query(sqlQuest, [id], function(error,res1,fileds){        if(error){            console.log(error);            res.send(JSON.stringify({code:500,msg:'网络出错,设置已读失败',results:[]}));        }else{            res.send(JSON.stringify({code:200,msg:'设置成功',results:[]}));        }    })  })  // 获取所有用户列表(根据名称模糊查询)  app.get([frontRequestUrl+'/listSystemUser', frontRequestUrl+'/listSystemUserByName'],function(req,res){      var userName = req.query.keyword?req.query.keyword:'';      var sqlQuest = 'select * from user where userName like "%'+userName+'%"';      connection.query(sqlQuest,function(error,res1,fileds){          if(error){              console.log(error);              res.send(JSON.stringify({code:500,msg:'查询用户数据失败',results:[]}));          }else{              if(res1.length){                  res.send(JSON.stringify({code:200,msg:'查询用户数据成功',results:res1}));              }else{                  res.send(JSON.stringify({code:500,msg:'无该用户信息',results:[]}));              }          }      })  })  // 获取所有用户列表(根据类型查找)  app.get([frontRequestUrl+'/listSystemUserByType'],function(req,res){      var type = req.query.type?req.query.type:'';      var sqlQuest = 'select userID as id, userName as name from user where type= "'+type+'"';      connection.query(sqlQuest,function(error,res1,fileds){          if(error){              console.log(error);              res.send(JSON.stringify({code:500,msg:'查询用户数据失败',results:res1}));          }else{              if(res1.length){                  res.send(JSON.stringify({code:200,msg:'查询用户数据成功',results:res1}));              }else{                  res.send(JSON.stringify({code:500,msg:'无该用户信息',results:res1}));              }          }      })  })  // 更新用户信息  app.post(frontRequestUrl+'/updateSystemUser',function(req,res){      var parse = req.body;      var sqlQuest = "update user set userName=?,type=?,pwd=? where userID = ?";      // 需要mysql语句处理的字段，可以不必拼接，直接放入下面的自动拼接语句里      var sqlParam = [parse.userName, parse.type, parse.pwd, parse.userID];      connection.query(sqlQuest,sqlParam,function(error,res1){          if(error){              console.log(error);              res.send(JSON.stringify({code:500,'msg':'更新用户信息失败'}));          }else{              res.send(JSON.stringify({code:200,'msg':'更新用户信息成功'}));          }      })  })  // user表的新增与删除userPower表也应变化  // 新增用户  app.post(frontRequestUrl+'/addSystemUser',function(req,res){      var parse = req.body;      var sqlQuest0 = "select * from user where userID = '"+parse.userID+"'";      connection.query(sqlQuest0,function(error,res0){        if(error){          console.log(error);return;        }        if(res0.length!=0){           res.send(JSON.stringify({code:500,'msg':'该工号已存在，请重新设置', results:''}));        }else{          // 新增用户          var sqlQuest = "insert into user(userID, userName,type,pwd) values(?, ?, ?, ?)";          var sqlParam = [parse.userID, parse.userName, parse.type, parse.pwd];          connection.query(sqlQuest,sqlParam,function(error,res1){              if(error){                  console.log(error);                  res.send(JSON.stringify({code:500,'msg':'新增用户失败'}));              }else{                  connection.query("select * from user where uid = ?;insert into userpower(userID) select userID from user where uid = ?",[res1.insertId, res1.insertId],function(error,res2){                      if(error){                          console.log(error);                          res.send(JSON.stringify({code:500,'msg':'新增用户失败', results:''}));                      }else{                          console.log(res1);                          res.send(JSON.stringify({code:200,'msg':'新增用户成功', results: res2[0]}));                      }                  })              }          })        }      })  })  // 删除用户信息  app.post(frontRequestUrl+'/deleteSystemUser',function(req,res){      var parse = req.body;      var sqlQuest = "delete from user where userID = ?;delete from userpower where userID = ?";      connection.query(sqlQuest,[parse.userID, parse.userID],function(error,res1){          if(error){              console.log(error);              res.send(JSON.stringify({code:500,'msg':'删除用户失败', results:''}));          }else{              res.send(JSON.stringify({code:200,'msg':'删除用户成功', results:''}));          }      })  })  // 获取所有用户权限列表(根据名称模糊查询权限)  app.get([frontRequestUrl+'/listAllUserPower', frontRequestUrl+'/listAllUserPowerByName'],function(req,res){      var userName = req.query.keyword?req.query.keyword:'';      // var sqlQuest = 'SELECT * from userPower where userName like "%'+userName+'%"';      var sqlQuest = 'select userPower.*, user.userName from userPower left join user on user.userID =userPower.userID  where userName like "%'+userName+'%"';      connection.query(sqlQuest, function(error,res1,fileds){          if(error){              console.log(error);              res.send(JSON.stringify({code:500,msg:'查询用户数据失败',results:''}));          }else{              if(res1.length){                  res.send(JSON.stringify({code:200,msg:'查询用户数据成功',results:res1}));              }else{                  res.send(JSON.stringify({code:500,msg:'暂无用户信息',results:''}));              }          }      })  })  // 更新用户权限  app.post(frontRequestUrl+'/setUserPower',function(req,res){      var parse = req.body;      var sqlQuest = "update userPower set login=?,handleIndent=?,handleWorkhour=?,listIndent=?,showpage = ? ,captain=? where userID = ?";      // 需要mysql语句处理的字段，可以不必拼接，直接放入下面的自动拼接语句里      var sqlParam = [parse.login, parse.handleIndent, parse.handleWorkhour, parse.listIndent, parse.showpage, parse.captain, parse.userID];      connection.query(sqlQuest,sqlParam,function(error,res1){          if(error){              console.log(error);              res.send(JSON.stringify({code:500,'msg':'更新用户权限失败', results:''}));          }else{              res.send(JSON.stringify({code:200,'msg':'更新用户权限成功', results:''}));          }      })  })  // 文件上传  app.post('/CDTGIS/maporderdata/analyzeUploadFile',function(req,res){      res.setHeader("500");      res.send(JSON.stringify({code:200,msg:'sucess'}));  })}module.exports =  userManage;