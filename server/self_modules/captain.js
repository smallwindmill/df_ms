/** 组长功能*/function verifyUse(str){    if(str){        return str;    }else{        return '';    }}const captain = (app,connection) =>{  var frontRequestUrl = "/produceMS";  // 负责订单处理  // 获取用户负责的订单列表(根据状态查询)   app.get([frontRequestUrl+'/queryDutyProcedureByStatus'],function(req,res){       var userID = req.query.userID;       // var sqlQuest = 'select id,name,erp,materialCode,materialName,userName as duty,`procedure`, status from indent left join user on duty=user.userID';// where userName like "%'+userName+'%"';       var sqlQuest = 'select id, erp,materialCode, materialName, `procedure`,userName as duty,userID, status from indent left join user on duty=userID where userID = ?';// where userName like "%'+userName+'%"';       console.log(sqlQuest, userID);       connection.query(sqlQuest,[userID],function(error,res1,fileds){           if(error){               console.log(error);               res.send(JSON.stringify({code:500,msg:'查询负责订单状态失败',results:res1}));           }else{               if(res1.length){                   res.send(JSON.stringify({code:200,msg:'查询负责订单状态成功',results:res1}));               }else{                   res.send(JSON.stringify({code:500,msg:'无该订单信息',results:res1}));               }           }       })   })  // 流程详细信息处理  // 获取所有流程细节记录  app.get(frontRequestUrl+'/queryProcedureInfo',function(req,res){      var sqlQuest = "select * from `procedureDetail`";      connection.query(sqlQuest,function(error,res1){          if(error){              console.log(error);              res.send(JSON.stringify({code:500,'msg':'获取流程细节失败'}));          }else{            var sqlQuest = "select * from `procedureDetail`";            /*connection.query(sqlQuest,function(error,res1){                if(error){                    console.log(error);                    res.send(JSON.stringify({code:500,'msg':'获取流程细节失败'}));                }else{                    res.send(JSON.stringify({code:200,'msg':'获取流程细节成功', results: res1}));                }            })*/              res.send(JSON.stringify({code:200,'msg':'获取流程细节成功', results: res1}));          }      })  })  // 新增流程细节记录  app.post(frontRequestUrl+'/addProcedureInfo',function(req,res){      var parse = req.body;      var sqlQuest0 = "select materialCode,materialName,duty from `procedure` where id = '"+parse.pid+"'";      connection.query(sqlQuest0,function(error,res0){        if(error){          console.log(error);return;        }        if(res0.length==0){           // res.send(JSON.stringify({code:500,'msg':'该流程已完成，请重新设置'}));           res.send(JSON.stringify({code:500,'msg':'该流程不存在，请检查后重试'}));        }else{          // 新增用户          var sqlQuest = "insert into procedureDetail(pid, productNum, worker, startTime, finishTime, remark, status) values(?, ?, ?, ?, ?, ?, ?)";          var sqlParam = [parse.pid, parse.productNum, parse.worker, parse.startTime, parse.finishTime, parse.remark, parse.status];          connection.query(sqlQuest,sqlParam,function(error,res1){              if(error){                  console.log(error);                  res.send(JSON.stringify({code:500,'msg':'新增流程细节失败'}));              }else{                  connection.query("select * from user where uid = ?",[res1.insertId],function(error,res2){                      if(error){                          console.log(error);                          res.send(JSON.stringify({code:500,'msg':'新增流程细节失败'}));                      }else{                          console.log(res1);                          res.send(JSON.stringify({code:200,'msg':'新增流程细节成功', results: res2[0]}));                      }                  })              }          })        }      })  })  // 更新流程细节记录  app.post(frontRequestUrl+'/addProcedureInfo2',function(req,res){      var parse = req.body;      var sqlQuest0 = "select materialCode,materialName,duty from `procedure` where id = '"+parse.pid+"'";      connection.query(sqlQuest0,function(error,res0){        if(error){          console.log(error);return;        }        if(res0.length==0){           // res.send(JSON.stringify({code:500,'msg':'该流程已完成，请重新设置'}));           res.send(JSON.stringify({code:500,'msg':'该流程不存在，请检查后重试'}));        }else{          // 新增用户          var sqlQuest = "insert into procedureDetail(pid, productNum, worker, startTime, finishTime, remark, status) values(?, ?, ?, ?)";          var sqlParam = [parse.pid, parse.productNum, parse.worker, parse.startTime, parse.finishTime, parse.remark, parse.status];          connection.query(sqlQuest,sqlParam,function(error,res1){              if(error){                  console.log(error);                  res.send(JSON.stringify({code:500,'msg':'新增流程细节失败'}));              }else{                  connection.query("select * from user where uid = ?",[res1.insertId],function(error,res2){                      if(error){                          console.log(error);                          res.send(JSON.stringify({code:500,'msg':'新增流程细节失败'}));                      }else{                          console.log(res1);                          res.send(JSON.stringify({code:200,'msg':'新增流程细节成功', results: res2[0]}));                      }                  })              }          })        }      })  })/*  // 新增流程信息  app.post(frontRequestUrl+'/addProcedureInfo',function(req,res){      var parse = req.body;      var sqlQuest0 = "select * from user where userID = '"+parse.userID+"'";      connection.query(sqlQuest0,function(error,res0){        if(error){          console.log(error);return;        }        if(res0.length!=0){           res.send(JSON.stringify({code:500,'msg':'该工号已存在，请重新设置'}));        }else{          // 新增用户          var sqlQuest = "insert into user(userID, userName,type,pwd) values(?, ?, ?, ?)";          var sqlParam = [parse.userID, parse.userName, parse.type, parse.pwd];          connection.query(sqlQuest,sqlParam,function(error,res1){              if(error){                  console.log(error);                  res.send(JSON.stringify({code:500,'msg':'新增用户失败'}));              }else{                  connection.query("select * from user where uid = ?",[res1.insertId],function(error,res2){                      if(error){                          console.log(error);                          res.send(JSON.stringify({code:500,'msg':'新增用户失败'}));                      }else{                          console.log(res1);                          res.send(JSON.stringify({code:200,'msg':'新增用户成功', results: res2[0]}));                      }                  })              }          })        }      })  })  // 获取流程详细信息  app.get([frontRequestUrl+'/queryProcedureInfo', frontRequestUrl+'/listAllUserPowerByName'],function(req,res){      var userName = req.query.keyword?req.query.keyword:'';      // var sqlQuest = 'SELECT * from userPower where userName like "%'+userName+'%"';      var sqlQuest = 'select userPower.*, user.userName from userPower left join user on user.userID =userPower.userID  where userName like "%'+userName+'%"';      connection.query(sqlQuest, function(error,res1,fileds){          if(error){              console.log(error);              res.send(JSON.stringify({code:500,msg:'查询用户数据失败',results:res1}));          }else{              if(res1.length){                  res.send(JSON.stringify({code:200,msg:'查询用户数据成功',results:res1}));              }else{                  res.send(JSON.stringify({code:500,msg:'暂无用户信息',results:res1}));              }          }      })  })  // 更新流程详细信息  app.post(frontRequestUrl+'/updateProcedureStatus',function(req,res){      var parse = req.body;      var sqlQuest = "update userPower set login=?,handleIndent=?,handleWorkhour=?,listIndent=?,captain=? where userID = ?";      // 需要mysql语句处理的字段，可以不必拼接，直接放入下面的自动拼接语句里      var sqlParam = [parse.login, parse.handleIndent, parse.handleWorkhour, parse.listIndent, parse.captain, parse.userID];      connection.query(sqlQuest,sqlParam,function(error,res1){          if(error){              console.log(error);              res.send(JSON.stringify({code:500,'msg':'更新用户权限失败'}));          }else{              res.send(JSON.stringify({code:200,'msg':'更新用户权限成功'}));          }      })  })*/}module.exports = captain;