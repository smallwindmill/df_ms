/** 组长功能*/function verifyUse(str){    if(str){        return str;    }else{        return '';    }}const captain = (app,connection) =>{  var frontRequestUrl = "/produceMS";  // 负责订单处理  // 获取用户负责的订单列表(根据状态查询)   app.get([frontRequestUrl+'/queryDutyProcedureByStatus', frontRequestUrl+'/queryDutyProcedureById'],function(req,res){      var userID = req.query.userID;      var id = req.query.id?req.query.id:'';       // var sqlQuest = 'select id,name,erp,materialCode,materialName,userName as duty,`procedure`, status from indent left join user on duty=user.userID';// where userName like "%'+userName+'%"';       var sqlQuest = 'select id, erp,materialCode, materialName, name as `procedure`,userName as duty,userID, status from `procedure` left join user on duty=userID where userID = ?';// where userName like "%'+userName+'%"';       // console.log(sqlQuest, userID);       var sqlParam;       if(id){        sqlQuest = 'select `procedure`.id,indent.erp, indent.materialCode, indent.materialName, `procedure`.name as `procedure`,userName as duty,userID, `procedure`.status from `procedure` left join user on  duty=userID  left join indent on indentID = indent.id where userID = ? and `procedure`.id = ?';        sqlParam = [userID, id];       }else{        sqlQuest = 'select `procedure`.id,indent.erp, indent.materialCode, indent.materialName, `procedure`.name as `procedure`,userName as duty,userID, `procedure`.status from `procedure` left join user on  duty=userID  left join indent on indentID = indent.id where userID = ?';        sqlParam = [userID];       }       connection.query(sqlQuest,sqlParam,function(error,res1,fileds){           if(error){               console.log(error);               res.send(JSON.stringify({code:500,msg:'查询负责订单状态失败',results:res1}));           }else{               if(res1.length){                   res.send(JSON.stringify({code:200,msg:'查询负责订单状态成功',results:res1}));               }else{                   res.send(JSON.stringify({code:500,msg:'无该订单信息',results:res1}));               }           }       })   })  // 更新流程状态  app.post(frontRequestUrl+'/updateDutyProcedureStatus',function(req,res){      var parse = req.body;      var sqlQuest = "update `procedure` set status=? where id = ?";      var sqlParam = [parse.status, parse.id];      console.log(sqlQuest, sqlParam);      connection.query(sqlQuest,sqlParam,function(error,res1){          if(error){              console.log(error);              res.send(JSON.stringify({code:500,'msg':'更新出错'}));          }else{              res.send(JSON.stringify({code:200,'msg':'状态更新成功', results: res1}));          }      })  })  // 流程详细信息处理  // 获取所有流程细节记录  app.get(frontRequestUrl+'/queryProcedureInfo',function(req,res){      var parse = req.query;      var sqlQuest = "select * from `procedureDetail` where pid = '"+parse.pid+"'";      connection.query(sqlQuest,function(error,res1){          if(error){              console.log(error);              res.send(JSON.stringify({code:500,'msg':'获取流程细节失败'}));          }else{            /*connection.query(sqlQuest,function(error,res1){                if(error){                    console.log(error);                    res.send(JSON.stringify({code:500,'msg':'获取流程细节失败'}));                }else{                    res.send(JSON.stringify({code:200,'msg':'获取流程细节成功', results: res1}));                }            })*/              res.send(JSON.stringify({code:200,'msg':'获取流程细节成功', results: res1}));          }      })  })  // 新增流程细节记录  app.post(frontRequestUrl+'/addProcedureInfo',function(req,res){      var parse = req.body;      var sqlQuest0 = "select materialCode,materialName,duty from `procedure` where id = '"+parse.pid+"'";      connection.query(sqlQuest0,function(error,res0){        if(error){          console.log(error);return;        }        if(res0.length==0){           // res.send(JSON.stringify({code:500,'msg':'该流程已完成，请重新设置'}));           res.send(JSON.stringify({code:500,'msg':'该流程不存在，请检查后重试'}));        }else{          // 新增用户          var sqlQuest = "insert into procedureDetail(pid, productNum, worker, startTime, finishTime, remark, status) values(?, ?, ?, ?, ?, ?, ?)";          var sqlParam = [parse.pid, parse.productNum, parse.worker, parse.startTime, parse.finishTime, parse.remark, parse.status];          connection.query(sqlQuest,sqlParam,function(error,res1){              if(error){                  console.log(error);                  res.send(JSON.stringify({code:500,'msg':'新增流程细节失败'}));              }else{                  connection.query("select * from procedureDetail where id = ?",[res1.insertId],function(error,res2){                      if(error){                          console.log(error);                          res.send(JSON.stringify({code:500,'msg':'新增流程细节失败'}));                      }else{                          console.log(res1);                          res.send(JSON.stringify({code:200,'msg':'新增流程细节成功', results: res2[0]}));                      }                  })              }          })        }      })  })  // 更新流程细节记录  app.post(frontRequestUrl+'/updateProcedureStatus',function(req,res){      var parse = req.body;      var sqlQuest = "update procedureDetail set status=?, remark = ? where id = ?";      var sqlParam = [parse.status, parse.remark, parse.id];      connection.query(sqlQuest,sqlParam,function(error,res1){          if(error){              console.log(error);              res.send(JSON.stringify({code:500,'msg':'更新出错'}));          }else{              res.send(JSON.stringify({code:200,'msg':'状态更新成功', results: res1}));          }      })      // 如果细节更新状态为完成，流程状态与订单状态随之变化，并结束当前流程      if(parse.status && parse.status == 1 ){        var sqlQuest1 = "update `procedure` set status=? where id = ?";        connection.query(sqlQuest1,[1, parse.pid],function(error1,res1){            if(error1){                console.log(error1);                res.send(JSON.stringify({code:500,'msg':'更新出错'}));            }else{                // res.send(JSON.stringify({code:200,'msg':'状态更新成功', results: res1}));              var sqlQuest2 = "update indent set status = 1, remark = ? where id = (select indentID from `procedure` where id = ?)";              console.log(sqlQuest2);console.log([parse.remark, parse.pid]);              connection.query(sqlQuest2,[parse.remark, parse.pid],function(error2,res2){                  if(error2){                      console.log(error2);                      res.send(JSON.stringify({code:500,'msg':'更新出错'}));                  }else{                      // res.send(JSON.stringify({code:200,'msg':'状态更新成功', results: res1}));                  }              })            }        })      }  })}module.exports = captain;